*************************************
------------- Call Depth ------------
 Depth  Interrupt    Function
-------------------------------------
    0        N         ProgramStart
    1        Y           _interrupt_l
    1        Y           _interrupt
    0        N         _main
C   1        N           _keyscan
C   2        N             _delayms
C   2        N             _delayms
C   1        N           _mode0
C   2        N             _keyscan
C   3        N               _delayms
C   3        N               _delayms
C   1        N           _mode1
C   1        N           _mode2
-------------------------------------
Stack Depth: 3
****************************************
------------- Free ROM Size ------------
Start=0X1    , End=0X7    , Size=7
Start=0X223  , End=0X3FF  , Size=477
----------------------------------------
EM78P173N       |        ROM Size        
----------------+-----------------------
Total           |  1024 x 13 bits(100.0%)
Used            |   540 x 13 bits( 52.7%)
Free            |   484 x 13 bits( 47.3%)
----------------------------------------
*************************************
-------------- Data Map -------------
d -- Uninitialized data
D -- Initialized data
b -- Uninitialized bit data
B -- Initialized bit data
C -- C Register
-------------- RAM Data -------------
0x00  - - - - - - - - - - - - - - - - 
0x10  - - - - - - - - - - - - - - - - 
0x20  B D D D D D D D D d d d d d - - 
0x30  - - - - - - - - - - - - - - - - 
----------- Register Data -----------
0x00  d d d b d b b - - - - - - - b b 
0x10  d C - - - - - - - - - - - - - - 
0x20  - - - - - b b - - - - - - - b b 
-------------- IO Data --------------
0x00  - - - - - d d - - - - d d d d d 
****************************************
--------------- ROM Code ---------------
    0x0000 :  JMP   0x00B       
    0x0001 :  ADD   A, @0xFF    
    0x0002 :  ADD   A, @0xFF    
    0x0003 :  ADD   A, @0xFF    
    0x0004 :  ADD   A, @0xFF    
    0x0005 :  ADD   A, @0xFF    
    0x0006 :  ADD   A, @0xFF    
    0x0007 :  ADD   A, @0xFF    
    0x0008 :  BC    0x03, 5     
    0x0009 :  BC    0x03, 6     
    0x000A :  JMP   0x064       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 287)
  ;WDTC();
    0x000B :  BANK  @0x0        
    0x000C :  MOV   A, @0x0E    
    0x000D :  MOV   0x20, A     
    0x000E :  MOV   A, @0x00    
    0x000F :  MOV   0x21, A     
    0x0010 :  MOV   0x22, A     
    0x0011 :  MOV   0x23, A     
    0x0012 :  MOV   0x24, A     
    0x0013 :  MOV   0x25, A     
    0x0014 :  MOV   A, @0x01    
    0x0015 :  MOV   0x26, A     
    0x0016 :  MOV   A, @0x00    
    0x0017 :  MOV   0x27, A     
    0x0018 :  MOV   A, @0x02    
    0x0019 :  MOV   0x28, A     
    0x001A :  WDTC              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 288)
  ;DISI();
    0x001B :  DISI              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 289)
  ;WDTCR=0;				//禁止WDT
    0x001C :  MOV   A, @0x00    
    0x001D :  IOW   0xE         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 290)
  ;P6CR=0x38;				//P63,P64,P65设为输入,其他输出
    0x001E :  MOV   A, @0x38    
    0x001F :  IOW   0x6         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 291)
  ;P5CR=0;
    0x0020 :  MOV   A, @0x00    
    0x0021 :  IOW   0x5         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 292)
  ;PORT5=0;
    0x0022 :  BANK  @0x0        
    0x0023 :  CLR   0x05        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 293)
  ;PHCR=0b11001111;		//0使能上拉,1关闭上拉
    0x0024 :  MOV   A, @0xCF    
    0x0025 :  IOW   0xD         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 294)
  ;PORT6=0;				//PORT6输出低
    0x0026 :  CLR   0x06        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 296)
  ;mov	a,@0x07
    0x0027 :  MOV   A, @0x07    
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 297)
  ;contw				//TCC分频比设为1：256
    0x0028 :  CONTW             
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 299)
  ;TCC=0;					//timer=1/4*(256-0)*256*2=32.768ms
    0x0029 :  CLR   0x01        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 300)
  ;ISR=0;
    0x002A :  CLR   0x0F        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 301)
  ;ENI();
    0x002B :  ENI               
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 302)
  ;IMR=0X03;
    0x002C :  MOV   A, @0x03    
    0x002D :  IOW   0xF         
    0x002E :  JMP   0x062       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 305)
  ;keyscan(); 	 		//键盘扫描
    0x002F :  CALL  0x06D       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 307)
  ;if(Timer_interrupt_flag)
    0x0030 :  BANK  @0x0        
    0x0031 :  JBS   0x20, 0     
    0x0032 :  JMP   0x062       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 309)
  ;Timer_interrupt_flag=0;
    0x0033 :  BC    0x20, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 311)
  ;switch(mode_count)
    0x0034 :  MOV   A, 0x21     
    0x0035 :  MOV   0x11, A     
    0x0036 :  MOV   0x11, 0x11  
    0x0037 :  JBC   0x03, 2     
    0x0038 :  JMP   0x042       
    0x0039 :  MOV   A, 0x11     
    0x003A :  XOR   A, @0x01    
    0x003B :  JBC   0x03, 2     
    0x003C :  JMP   0x047       
    0x003D :  MOV   A, 0x11     
    0x003E :  XOR   A, @0x02    
    0x003F :  JBC   0x03, 2     
    0x0040 :  JMP   0x04B       
    0x0041 :  JMP   0x04E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 313)
  ;case 0: if(S1_sleep_flag==0)mode0();break;  	//加入判断是否等于0,S1唤醒不进入
    0x0042 :  BANK  @0x0        
    0x0043 :  JBC   0x20, 6     
    0x0044 :  JMP   0x04E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 313)
  ;case 0: if(S1_sleep_flag==0)mode0();break;  	//加入判断是否等于0,S1唤醒不进入
    0x0045 :  CALL  0x0AB       
    0x0046 :  JMP   0x04E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 314)
  ;case 1: S1_sleep_flag=0; mode1();break;
    0x0047 :  BANK  @0x0        
    0x0048 :  BC    0x20, 6     
    0x0049 :  CALL  0x0D5       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 314)
  ;case 1: S1_sleep_flag=0; mode1();break;
    0x004A :  JMP   0x04E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 315)
  ;case 2: S1_sleep_flag=0; mode2();break;
    0x004B :  BANK  @0x0        
    0x004C :  BC    0x20, 6     
    0x004D :  CALL  0x128       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 319)
  ;if(S1_sleep_flag)
    0x004E :  BANK  @0x0        
    0x004F :  JBS   0x20, 6     
    0x0050 :  JMP   0x062       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 321)
  ;if(S1_flag)
    0x0051 :  JBS   0x20, 4     
    0x0052 :  JMP   0x062       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 323)
  ;white=!white;
    0x0053 :  JBC   0x06, 0     
    0x0054 :  JMP   0x058       
    0x0055 :  MOV   A, @0x01    
    0x0056 :  MOV   0x2D, A     
    0x0057 :  JMP   0x05A       
    0x0058 :  BANK  @0x0        
    0x0059 :  CLR   0x2D        
    0x005A :  BANK  @0x0        
    0x005B :  MOV   A, 0x2D     
    0x005C :  MOV   0x11, A     
    0x005D :  BC    0x06, 0     
    0x005E :  JBC   0x11, 0     
    0x005F :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 324)
  ;S1_flag=0;
    0x0060 :  BC    0x20, 4     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 325)
  ;S1_sleep_flag=0;							//S1再按下,下次中断进入case0休眠
    0x0061 :  BC    0x20, 6     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 303)
  ;while(1)
    0x0062 :  JMP   0x02F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 356)
  ;}
    0x0063 :  RET               
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 362)
  ;if	(TCIF==1)
    0x0064 :  MOV   0x10, A     
    0x0065 :  BANK  @0x0        
    0x0066 :  JBS   0x0F, 0     
    0x0067 :  JMP   0x06C       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 365)
  ;ISR&=0XFE;				//清TCC中断标志位
    0x0068 :  MOV   A, @0xFE    
    0x0069 :  AND   0x0F, A     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 366)
  ;TCC=0;					//TCC赋初值
    0x006A :  CLR   0x01        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 368)
  ;Timer_interrupt_flag = 1;
    0x006B :  BS    0x20, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 370)
  ;}
    0x006C :  RETI              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 255)
  ;if(!S1)					//S1按下
    0x006D :  BANK  @0x0        
    0x006E :  JBC   0x06, 5     
    0x006F :  JMP   0x080       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 257)
  ;delayms(10);
    0x0070 :  MOV   A, @0x0A    
    0x0071 :  MOV   0x2C, A     
    0x0072 :  CALL  0x097       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 258)
  ;if(!S1)
    0x0073 :  BANK  @0x0        
    0x0074 :  JBC   0x06, 5     
    0x0075 :  JMP   0x080       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 260)
  ;S1_flag=1;
    0x0076 :  BS    0x20, 4     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 261)
  ;white_status++;
    0x0077 :  INC   0x28        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 262)
  ;if(white_status>=3)
    0x0078 :  MOV   A, @0x03    
    0x0079 :  SUB   A, 0x28     
    0x007A :  JBS   0x03, 0     
    0x007B :  JMP   0x07D       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 263)
  ;white_status=0;
    0x007C :  CLR   0x28        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 264)
  ;while(!S1);		//等待按键释放
    0x007D :  BANK  @0x0        
    0x007E :  JBS   0x06, 5     
    0x007F :  JMP   0x07D       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 267)
  ;if(!S2)					//S2按下
    0x0080 :  BANK  @0x0        
    0x0081 :  JBC   0x06, 4     
    0x0082 :  JMP   0x096       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 269)
  ;delayms(10);
    0x0083 :  MOV   A, @0x0A    
    0x0084 :  MOV   0x2C, A     
    0x0085 :  CALL  0x097       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 270)
  ;if(!S2)
    0x0086 :  BANK  @0x0        
    0x0087 :  JBC   0x06, 4     
    0x0088 :  JMP   0x096       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 272)
  ;S2_flag=1;
    0x0089 :  BS    0x20, 5     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 273)
  ;white_status=2;
    0x008A :  MOV   A, @0x02    
    0x008B :  MOV   0x28, A     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 274)
  ;mode_count++;
    0x008C :  INC   0x21        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 275)
  ;if(mode_count>=3)
    0x008D :  MOV   A, @0x03    
    0x008E :  SUB   A, 0x21     
    0x008F :  JBS   0x03, 0     
    0x0090 :  JMP   0x093       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 276)
  ;{mode_count=0;
    0x0091 :  CLR   0x21        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 277)
  ;S1_sleep_flag=0;}
    0x0092 :  BC    0x20, 6     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 277)
  ;S1_sleep_flag=0;}
    0x0093 :  BANK  @0x0        
    0x0094 :  JBS   0x06, 4     
    0x0095 :  JMP   0x093       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 282)
  ;}
    0x0096 :  RET               
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 250)
  ;for(i=xms;i>0;i--)
    0x0097 :  BANK  @0x0        
    0x0098 :  MOV   A, 0x2C     
    0x0099 :  MOV   0x2A, A     
    0x009A :  JMP   0x0A6       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 251)
  ;for(j=200;j>0;j--);
    0x009B :  MOV   A, @0xC8    
    0x009C :  BANK  @0x0        
    0x009D :  MOV   0x2B, A     
    0x009E :  JMP   0x0A1       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 251)
  ;for(j=200;j>0;j--);
    0x009F :  BANK  @0x0        
    0x00A0 :  DEC   0x2B        
    0x00A1 :  BANK  @0x0        
    0x00A2 :  MOV   0x2B, 0x2B  
    0x00A3 :  JBS   0x03, 2     
    0x00A4 :  JMP   0x09F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 250)
  ;for(i=xms;i>0;i--)
    0x00A5 :  DEC   0x2A        
    0x00A6 :  BANK  @0x0        
    0x00A7 :  MOV   0x2A, 0x2A  
    0x00A8 :  JBS   0x03, 2     
    0x00A9 :  JMP   0x09B       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 252)
  ;}
    0x00AA :  RET               
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 42)
  ;white=0;red1=0;red2=0;  //休眠前io初始化
    0x00AB :  BANK  @0x0        
    0x00AC :  BC    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 42)
  ;white=0;red1=0;red2=0;  //休眠前io初始化
    0x00AD :  BC    0x06, 1     
    0x00AE :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 44)
  ;mov		a,@0x0f
    0x00AF :  MOV   A, @0x0F    
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 45)
  ;contw
    0x00B0 :  CONTW             
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 46)
  ;WDTC	                //禁止 WDT
    0x00B1 :  WDTC              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 47)
  ;MOV		0X6,0X6			//读取PORT6状态
    0x00B2 :  MOV   0x06, 0x06  
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 49)
  ;DISI();					//禁止全局中断
    0x00B3 :  DISI              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 50)
  ;SCR=0X23;				//IRC 4MHz IDLE=0 TCC时钟源:fs(副振荡器) cpu振荡源:fm(主振荡器)
    0x00B4 :  MOV   A, @0x23    
    0x00B5 :  BANK  @0x1        
    0x00B6 :  MOV   0x0F, A     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 51)
  ;IMR=0X02;				//使能Port6状态改变唤醒
    0x00B7 :  MOV   A, @0x02    
    0x00B8 :  IOW   0xF         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 52)
  ;SLEP();					//进入睡眠模式 程序暂停在此不动
    0x00B9 :  SLEP              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 53)
  ;NOP();
    0x00BA :  NOP               
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 54)
  ;NOP();
    0x00BB :  NOP               
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 55)
  ;WDTC();					//清WDT
    0x00BC :  WDTC              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 56)
  ;WDTCR=0;				//禁止WDT
    0x00BD :  MOV   A, @0x00    
    0x00BE :  IOW   0xE         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 58)
  ;SCR=0X63;				////IRC 4MHz IDLE=0 TCC时钟源:fm(主振荡器) cpu振荡源:fm(主振荡器)
    0x00BF :  MOV   A, @0x63    
    0x00C0 :  MOV   0x0F, A     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 59)
  ;keyscan();
    0x00C1 :  CALL  0x06D       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 60)
  ;if(S1_flag)				//唤醒时检测是否是S1唤醒
    0x00C2 :  BANK  @0x0        
    0x00C3 :  JBS   0x20, 4     
    0x00C4 :  JMP   0x0C8       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 62)
  ;S1_sleep_flag=1;
    0x00C5 :  BS    0x20, 6     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 63)
  ;white=1;
    0x00C6 :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 64)
  ;S1_flag=0;
    0x00C7 :  BC    0x20, 4     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 65)
  ;}
    0x00C8 :  WDTC              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 71)
  ;DISI();
    0x00C9 :  DISI              
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 72)
  ;WDTCR=0;				//禁止WDT
    0x00CA :  MOV   A, @0x00    
    0x00CB :  IOW   0xE         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 76)
  ;mov	a,@0x07
    0x00CC :  MOV   A, @0x07    
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 77)
  ;contw				//TCC分频比设为1：256
    0x00CD :  CONTW             
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 79)
  ;TCC=0;					//timer=1/4*(256-0)*256*2=32.768ms
    0x00CE :  CLR   0x01        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 80)
  ;ISR=0;
    0x00CF :  BANK  @0x0        
    0x00D0 :  CLR   0x0F        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 81)
  ;IMR=1;
    0x00D1 :  MOV   A, @0x01    
    0x00D2 :  IOW   0xF         
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 82)
  ;ENI();
    0x00D3 :  ENI               
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 85)
  ;}
    0x00D4 :  RET               
    0x00D5 :  MOV   A, 0x11     
    0x00D6 :  BANK  @0x0        
    0x00D7 :  MOV   0x29, A     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 89)
  ;if(mode1_light_flag)	 	//判断当前灯是否该亮
    0x00D8 :  JBS   0x20, 1     
    0x00D9 :  JMP   0x0FF       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 91)
  ;switch (white_status)	//白灯调节按钮
    0x00DA :  MOV   A, 0x28     
    0x00DB :  MOV   0x11, A     
    0x00DC :  MOV   0x11, 0x11  
    0x00DD :  JBC   0x03, 2     
    0x00DE :  JMP   0x0E8       
    0x00DF :  MOV   A, 0x11     
    0x00E0 :  XOR   A, @0x01    
    0x00E1 :  JBC   0x03, 2     
    0x00E2 :  JMP   0x0ED       
    0x00E3 :  MOV   A, 0x11     
    0x00E4 :  XOR   A, @0x02    
    0x00E5 :  JBC   0x03, 2     
    0x00E6 :  JMP   0x0F2       
    0x00E7 :  JMP   0x0F6       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 93)
  ;case 0: white=1;red1=1;red2=1;break;
    0x00E8 :  BANK  @0x0        
    0x00E9 :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 93)
  ;case 0: white=1;red1=1;red2=1;break;
    0x00EA :  BS    0x06, 1     
    0x00EB :  BS    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 93)
  ;case 0: white=1;red1=1;red2=1;break;
    0x00EC :  JMP   0x0F6       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 94)
  ;case 1: white=0;red1=1;red2=1;break;
    0x00ED :  BANK  @0x0        
    0x00EE :  BC    0x06, 0     
    0x00EF :  BS    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 94)
  ;case 1: white=0;red1=1;red2=1;break;
    0x00F0 :  BS    0x06, 2     
    0x00F1 :  JMP   0x0F6       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 95)
  ;case 2: white=1;red1=1;red2=1;break;
    0x00F2 :  BANK  @0x0        
    0x00F3 :  BS    0x06, 0     
    0x00F4 :  BS    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 95)
  ;case 2: white=1;red1=1;red2=1;break;
    0x00F5 :  BS    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 98)
  ;mode1_count1++;			//灯亮1单位
    0x00F6 :  BANK  @0x0        
    0x00F7 :  INC   0x22        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 99)
  ;if(mode1_count1>=4)		//判断灯亮是否到4单位
    0x00F8 :  MOV   A, @0x04    
    0x00F9 :  SUB   A, 0x22     
    0x00FA :  JBS   0x03, 0     
    0x00FB :  JMP   0x124       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 101)
  ;mode1_count1=0;		//重置计数
    0x00FC :  CLR   0x22        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 102)
  ;mode1_light_flag=0;	//灯亮标志置零
    0x00FD :  BC    0x20, 1     
    0x00FE :  JMP   0x124       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 108)
  ;switch (white_status)
    0x00FF :  BANK  @0x0        
    0x0100 :  MOV   A, 0x28     
    0x0101 :  MOV   0x11, A     
    0x0102 :  MOV   0x11, 0x11  
    0x0103 :  JBC   0x03, 2     
    0x0104 :  JMP   0x10E       
    0x0105 :  MOV   A, 0x11     
    0x0106 :  XOR   A, @0x01    
    0x0107 :  JBC   0x03, 2     
    0x0108 :  JMP   0x113       
    0x0109 :  MOV   A, 0x11     
    0x010A :  XOR   A, @0x02    
    0x010B :  JBC   0x03, 2     
    0x010C :  JMP   0x118       
    0x010D :  JMP   0x11C       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 110)
  ;case 0: white=1;red1=0;red2=0;break;
    0x010E :  BANK  @0x0        
    0x010F :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 110)
  ;case 0: white=1;red1=0;red2=0;break;
    0x0110 :  BC    0x06, 1     
    0x0111 :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 110)
  ;case 0: white=1;red1=0;red2=0;break;
    0x0112 :  JMP   0x11C       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 111)
  ;case 1: white=0;red1=0;red2=0;break;
    0x0113 :  BANK  @0x0        
    0x0114 :  BC    0x06, 0     
    0x0115 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 111)
  ;case 1: white=0;red1=0;red2=0;break;
    0x0116 :  BC    0x06, 2     
    0x0117 :  JMP   0x11C       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 112)
  ;case 2: white=0;red1=0;red2=0;break;
    0x0118 :  BANK  @0x0        
    0x0119 :  BC    0x06, 0     
    0x011A :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 112)
  ;case 2: white=0;red1=0;red2=0;break;
    0x011B :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 115)
  ;mode1_count2++;
    0x011C :  BANK  @0x0        
    0x011D :  INC   0x23        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 116)
  ;if(mode1_count2>=4)
    0x011E :  MOV   A, @0x04    
    0x011F :  SUB   A, 0x23     
    0x0120 :  JBS   0x03, 0     
    0x0121 :  JMP   0x124       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 118)
  ;mode1_count2=0;
    0x0122 :  CLR   0x23        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 119)
  ;mode1_light_flag=1;
    0x0123 :  BS    0x20, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 123)
  ;}
    0x0124 :  BANK  @0x0        
    0x0125 :  MOV   A, 0x29     
    0x0126 :  MOV   0x11, A     
    0x0127 :  RET               
    0x0128 :  MOV   A, 0x11     
    0x0129 :  BANK  @0x0        
    0x012A :  MOV   0x29, A     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 129)
  ;if(mode2_red1_flag)					//判断是否该亮红灯1
    0x012B :  JBS   0x20, 2     
    0x012C :  JMP   0x1A6       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 131)
  ;if(mode2_four_cycle_flag)	//判断四次循环是否结束
    0x012D :  MOV   0x26, 0x26  
    0x012E :  JBC   0x03, 2     
    0x012F :  JMP   0x17E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 133)
  ;if(mode2_light_flag)		//判断当前是否亮灯
    0x0130 :  JBS   0x20, 3     
    0x0131 :  JMP   0x157       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 135)
  ;switch (white_status)	//白灯调节按钮
    0x0132 :  MOV   A, 0x28     
    0x0133 :  MOV   0x11, A     
    0x0134 :  MOV   0x11, 0x11  
    0x0135 :  JBC   0x03, 2     
    0x0136 :  JMP   0x140       
    0x0137 :  MOV   A, 0x11     
    0x0138 :  XOR   A, @0x01    
    0x0139 :  JBC   0x03, 2     
    0x013A :  JMP   0x145       
    0x013B :  MOV   A, 0x11     
    0x013C :  XOR   A, @0x02    
    0x013D :  JBC   0x03, 2     
    0x013E :  JMP   0x14A       
    0x013F :  JMP   0x14E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 137)
  ;case 0: white=1;red1=1;red2=0;break;
    0x0140 :  BANK  @0x0        
    0x0141 :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 137)
  ;case 0: white=1;red1=1;red2=0;break;
    0x0142 :  BS    0x06, 1     
    0x0143 :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 137)
  ;case 0: white=1;red1=1;red2=0;break;
    0x0144 :  JMP   0x14E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 138)
  ;case 1: white=0;red1=1;red2=0;break;
    0x0145 :  BANK  @0x0        
    0x0146 :  BC    0x06, 0     
    0x0147 :  BS    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 138)
  ;case 1: white=0;red1=1;red2=0;break;
    0x0148 :  BC    0x06, 2     
    0x0149 :  JMP   0x14E       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 139)
  ;case 2: white=1;red1=1;red2=0;break;//case0同case2
    0x014A :  BANK  @0x0        
    0x014B :  BS    0x06, 0     
    0x014C :  BS    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 139)
  ;case 2: white=1;red1=1;red2=0;break;//case0同case2
    0x014D :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 142)
  ;mode2_count1++;
    0x014E :  BANK  @0x0        
    0x014F :  INC   0x24        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 143)
  ;if(mode2_count1>=2)
    0x0150 :  MOV   A, @0x02    
    0x0151 :  SUB   A, 0x24     
    0x0152 :  JBS   0x03, 0     
    0x0153 :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 145)
  ;mode2_count1=0;
    0x0154 :  CLR   0x24        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 146)
  ;mode2_light_flag=0;
    0x0155 :  BC    0x20, 3     
    0x0156 :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 152)
  ;switch (white_status)	//白灯调节按钮
    0x0157 :  BANK  @0x0        
    0x0158 :  MOV   A, 0x28     
    0x0159 :  MOV   0x11, A     
    0x015A :  MOV   0x11, 0x11  
    0x015B :  JBC   0x03, 2     
    0x015C :  JMP   0x166       
    0x015D :  MOV   A, 0x11     
    0x015E :  XOR   A, @0x01    
    0x015F :  JBC   0x03, 2     
    0x0160 :  JMP   0x16B       
    0x0161 :  MOV   A, 0x11     
    0x0162 :  XOR   A, @0x02    
    0x0163 :  JBC   0x03, 2     
    0x0164 :  JMP   0x170       
    0x0165 :  JMP   0x174       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 154)
  ;case 0: white=1;red1=0;red2=0;break;
    0x0166 :  BANK  @0x0        
    0x0167 :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 154)
  ;case 0: white=1;red1=0;red2=0;break;
    0x0168 :  BC    0x06, 1     
    0x0169 :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 154)
  ;case 0: white=1;red1=0;red2=0;break;
    0x016A :  JMP   0x174       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 155)
  ;case 1: white=0;red1=0;red2=0;break;
    0x016B :  BANK  @0x0        
    0x016C :  BC    0x06, 0     
    0x016D :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 155)
  ;case 1: white=0;red1=0;red2=0;break;
    0x016E :  BC    0x06, 2     
    0x016F :  JMP   0x174       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 156)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x0170 :  BANK  @0x0        
    0x0171 :  BC    0x06, 0     
    0x0172 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 156)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x0173 :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 159)
  ;mode2_light_flag=1;
    0x0174 :  BANK  @0x0        
    0x0175 :  BS    0x20, 3     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 160)
  ;mode2_four_cycle_count++;
    0x0176 :  INC   0x27        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 161)
  ;if(mode2_four_cycle_count>=4)
    0x0177 :  MOV   A, @0x04    
    0x0178 :  SUB   A, 0x27     
    0x0179 :  JBS   0x03, 0     
    0x017A :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 163)
  ;mode2_four_cycle_count=0;	//计数归零
    0x017B :  CLR   0x27        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 164)
  ;mode2_four_cycle_flag=0;
    0x017C :  CLR   0x26        
    0x017D :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 172)
  ;switch (white_status)		//白灯调节按钮
    0x017E :  BANK  @0x0        
    0x017F :  MOV   A, 0x28     
    0x0180 :  MOV   0x11, A     
    0x0181 :  MOV   0x11, 0x11  
    0x0182 :  JBC   0x03, 2     
    0x0183 :  JMP   0x18D       
    0x0184 :  MOV   A, 0x11     
    0x0185 :  XOR   A, @0x01    
    0x0186 :  JBC   0x03, 2     
    0x0187 :  JMP   0x192       
    0x0188 :  MOV   A, 0x11     
    0x0189 :  XOR   A, @0x02    
    0x018A :  JBC   0x03, 2     
    0x018B :  JMP   0x197       
    0x018C :  JMP   0x19B       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 174)
  ;case 0: white=1;red1=0;red2=0;break;
    0x018D :  BANK  @0x0        
    0x018E :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 174)
  ;case 0: white=1;red1=0;red2=0;break;
    0x018F :  BC    0x06, 1     
    0x0190 :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 174)
  ;case 0: white=1;red1=0;red2=0;break;
    0x0191 :  JMP   0x19B       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 175)
  ;case 1: white=0;red1=0;red2=0;break;
    0x0192 :  BANK  @0x0        
    0x0193 :  BC    0x06, 0     
    0x0194 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 175)
  ;case 1: white=0;red1=0;red2=0;break;
    0x0195 :  BC    0x06, 2     
    0x0196 :  JMP   0x19B       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 176)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x0197 :  BANK  @0x0        
    0x0198 :  BC    0x06, 0     
    0x0199 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 176)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x019A :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 179)
  ;mode2_count2++;
    0x019B :  BANK  @0x0        
    0x019C :  INC   0x25        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 180)
  ;if(mode2_count2>=16)		//灯灭16单位结束
    0x019D :  MOV   A, @0x10    
    0x019E :  SUB   A, 0x25     
    0x019F :  JBS   0x03, 0     
    0x01A0 :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 182)
  ;mode2_count2=0;
    0x01A1 :  CLR   0x25        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 183)
  ;mode2_red1_flag=0;
    0x01A2 :  BC    0x20, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 184)
  ;mode2_four_cycle_flag=1;//四次循环重新开始
    0x01A3 :  MOV   A, @0x01    
    0x01A4 :  MOV   0x26, A     
    0x01A5 :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 190)
  ;if(mode2_four_cycle_flag)	//判断四次循环是否结束
    0x01A6 :  BANK  @0x0        
    0x01A7 :  MOV   0x26, 0x26  
    0x01A8 :  JBC   0x03, 2     
    0x01A9 :  JMP   0x1F8       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 192)
  ;if(mode2_light_flag)		//判断当前是否亮灯
    0x01AA :  JBS   0x20, 3     
    0x01AB :  JMP   0x1D1       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 194)
  ;switch (white_status)	//白灯调节按钮
    0x01AC :  MOV   A, 0x28     
    0x01AD :  MOV   0x11, A     
    0x01AE :  MOV   0x11, 0x11  
    0x01AF :  JBC   0x03, 2     
    0x01B0 :  JMP   0x1BA       
    0x01B1 :  MOV   A, 0x11     
    0x01B2 :  XOR   A, @0x01    
    0x01B3 :  JBC   0x03, 2     
    0x01B4 :  JMP   0x1BF       
    0x01B5 :  MOV   A, 0x11     
    0x01B6 :  XOR   A, @0x02    
    0x01B7 :  JBC   0x03, 2     
    0x01B8 :  JMP   0x1C4       
    0x01B9 :  JMP   0x1C8       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 196)
  ;case 0: white=1;red1=0;red2=1;break;
    0x01BA :  BANK  @0x0        
    0x01BB :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 196)
  ;case 0: white=1;red1=0;red2=1;break;
    0x01BC :  BC    0x06, 1     
    0x01BD :  BS    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 196)
  ;case 0: white=1;red1=0;red2=1;break;
    0x01BE :  JMP   0x1C8       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 197)
  ;case 1: white=0;red1=0;red2=1;break;
    0x01BF :  BANK  @0x0        
    0x01C0 :  BC    0x06, 0     
    0x01C1 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 197)
  ;case 1: white=0;red1=0;red2=1;break;
    0x01C2 :  BS    0x06, 2     
    0x01C3 :  JMP   0x1C8       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 198)
  ;case 2: white=1;red1=0;red2=1;break;//case0同case2
    0x01C4 :  BANK  @0x0        
    0x01C5 :  BS    0x06, 0     
    0x01C6 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 198)
  ;case 2: white=1;red1=0;red2=1;break;//case0同case2
    0x01C7 :  BS    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 201)
  ;mode2_count1++;
    0x01C8 :  BANK  @0x0        
    0x01C9 :  INC   0x24        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 202)
  ;if(mode2_count1>=2)
    0x01CA :  MOV   A, @0x02    
    0x01CB :  SUB   A, 0x24     
    0x01CC :  JBS   0x03, 0     
    0x01CD :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 204)
  ;mode2_count1=0;
    0x01CE :  CLR   0x24        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 205)
  ;mode2_light_flag=0;
    0x01CF :  BC    0x20, 3     
    0x01D0 :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 211)
  ;switch (white_status)	//白灯调节按钮
    0x01D1 :  BANK  @0x0        
    0x01D2 :  MOV   A, 0x28     
    0x01D3 :  MOV   0x11, A     
    0x01D4 :  MOV   0x11, 0x11  
    0x01D5 :  JBC   0x03, 2     
    0x01D6 :  JMP   0x1E0       
    0x01D7 :  MOV   A, 0x11     
    0x01D8 :  XOR   A, @0x01    
    0x01D9 :  JBC   0x03, 2     
    0x01DA :  JMP   0x1E5       
    0x01DB :  MOV   A, 0x11     
    0x01DC :  XOR   A, @0x02    
    0x01DD :  JBC   0x03, 2     
    0x01DE :  JMP   0x1EA       
    0x01DF :  JMP   0x1EE       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 213)
  ;case 0: white=1;red1=0;red2=0;break;
    0x01E0 :  BANK  @0x0        
    0x01E1 :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 213)
  ;case 0: white=1;red1=0;red2=0;break;
    0x01E2 :  BC    0x06, 1     
    0x01E3 :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 213)
  ;case 0: white=1;red1=0;red2=0;break;
    0x01E4 :  JMP   0x1EE       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 214)
  ;case 1: white=0;red1=0;red2=0;break;
    0x01E5 :  BANK  @0x0        
    0x01E6 :  BC    0x06, 0     
    0x01E7 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 214)
  ;case 1: white=0;red1=0;red2=0;break;
    0x01E8 :  BC    0x06, 2     
    0x01E9 :  JMP   0x1EE       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 215)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x01EA :  BANK  @0x0        
    0x01EB :  BC    0x06, 0     
    0x01EC :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 215)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x01ED :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 218)
  ;mode2_light_flag=1;
    0x01EE :  BANK  @0x0        
    0x01EF :  BS    0x20, 3     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 219)
  ;mode2_four_cycle_count++;
    0x01F0 :  INC   0x27        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 220)
  ;if(mode2_four_cycle_count>=4)
    0x01F1 :  MOV   A, @0x04    
    0x01F2 :  SUB   A, 0x27     
    0x01F3 :  JBS   0x03, 0     
    0x01F4 :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 222)
  ;mode2_four_cycle_count=0;	//计数归零
    0x01F5 :  CLR   0x27        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 223)
  ;mode2_four_cycle_flag=0;
    0x01F6 :  CLR   0x26        
    0x01F7 :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 229)
  ;switch (white_status)		//白灯调节按钮
    0x01F8 :  BANK  @0x0        
    0x01F9 :  MOV   A, 0x28     
    0x01FA :  MOV   0x11, A     
    0x01FB :  MOV   0x11, 0x11  
    0x01FC :  JBC   0x03, 2     
    0x01FD :  JMP   0x207       
    0x01FE :  MOV   A, 0x11     
    0x01FF :  XOR   A, @0x01    
    0x0200 :  JBC   0x03, 2     
    0x0201 :  JMP   0x20C       
    0x0202 :  MOV   A, 0x11     
    0x0203 :  XOR   A, @0x02    
    0x0204 :  JBC   0x03, 2     
    0x0205 :  JMP   0x211       
    0x0206 :  JMP   0x215       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 231)
  ;case 0: white=1;red1=0;red2=0;break;
    0x0207 :  BANK  @0x0        
    0x0208 :  BS    0x06, 0     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 231)
  ;case 0: white=1;red1=0;red2=0;break;
    0x0209 :  BC    0x06, 1     
    0x020A :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 231)
  ;case 0: white=1;red1=0;red2=0;break;
    0x020B :  JMP   0x215       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 232)
  ;case 1: white=0;red1=0;red2=0;break;
    0x020C :  BANK  @0x0        
    0x020D :  BC    0x06, 0     
    0x020E :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 232)
  ;case 1: white=0;red1=0;red2=0;break;
    0x020F :  BC    0x06, 2     
    0x0210 :  JMP   0x215       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 233)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x0211 :  BANK  @0x0        
    0x0212 :  BC    0x06, 0     
    0x0213 :  BC    0x06, 1     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 233)
  ;case 2: white=0;red1=0;red2=0;break;//case1同case2
    0x0214 :  BC    0x06, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 236)
  ;mode2_count2++;
    0x0215 :  BANK  @0x0        
    0x0216 :  INC   0x25        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 237)
  ;if(mode2_count2>=16)		//灯灭16单位结束
    0x0217 :  MOV   A, @0x10    
    0x0218 :  SUB   A, 0x25     
    0x0219 :  JBS   0x03, 0     
    0x021A :  JMP   0x21F       
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 239)
  ;mode2_count2=0;
    0x021B :  CLR   0x25        
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 240)
  ;mode2_red1_flag=1;
    0x021C :  BS    0x20, 2     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 241)
  ;mode2_four_cycle_flag=1;//四次循环重新开始
    0x021D :  MOV   A, @0x01    
    0x021E :  MOV   0x26, A     
C:\Users\daminger\OneDrive\github\project\light - v101-1751确定版\light.c (line 245)
  ;}
    0x021F :  BANK  @0x0        
    0x0220 :  MOV   A, 0x29     
    0x0221 :  MOV   0x11, A     
    0x0222 :  RET               
